{"version":3,"sources":["Context/ThemeContext.js","ThemeToggler.jsx","Header.jsx","Colors.js","MainWithFunction.js","MainWithClass.jsx","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","themeTogglerStyle","cursor","ThemeToggler","useContext","themeMode","setThemeMode","style","onClick","title","headerStyles","padding","display","justifyContent","alignItems","Header","AppTheme","light","textColor","backgroundColor","dark","Main","theme","currentTheme","color","state","Consumer","Component","App","themeHook","useState","Provider","value","MainWithClass","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAKeA,G,MAFMC,IAAMC,cAAc,CAAC,QAAS,gB,qBCC7CC,EAAoB,CACtBC,OAAQ,WAaGC,EAXM,WACjB,MAAiCC,qBAAWN,GAA5C,mBAAMO,EAAN,KAAiBC,EAAjB,KACA,OACI,qBAAKC,MAASN,EAAmBO,QAAW,WAAOF,EAA2B,UAAdD,EAAuB,OAAQ,UAA/F,SACI,uBAAMI,MAAQ,eAAd,UACA,4CADA,SACyB,cAAC,IAAD,IADzB,MAC0D,UAAdJ,EAAwB,eAAO,qBCTjFK,EAAe,CACjBC,QAAS,OACTC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UAWDC,EATA,WACX,OACI,yBAAQR,MAASG,EAAjB,UACI,6CACA,cAAC,EAAD,QCDGM,EAZE,CAChBC,MAAO,CACLC,UAAW,OACXC,gBAAiB,QAEnBC,KAAM,CACJF,UAAW,OACXC,gBAAiB,SCeLE,EAhBF,WACT,IAAMC,EAAQlB,qBAAWN,GAAc,GACjCyB,EAAeP,EAASM,GAC9B,OACI,uBAAMf,MAAS,CACXI,QAAS,OACTQ,gBAAgB,GAAD,OAAKI,EAAaJ,iBACjCK,MAAM,GAAD,OAAKD,EAAaL,YAH3B,UAKI,oDACA,yD,4BCmBGG,E,kDA9BX,aAAe,IAAD,8BACV,gBACKI,MAAQ,GAFH,E,0CAId,WACI,OACI,cAAC,EAAaC,SAAd,UAEQ,YAAc,IAAZJ,EAAW,oBACHC,EAAeP,EAASM,GAC9B,OACI,uBAAMf,MAAS,CACXI,QAAS,OACTQ,gBAAgB,GAAD,OAAKI,EAAaJ,iBACjCK,MAAM,GAAD,OAAKD,EAAaL,YAH3B,UAMI,iDACA,yE,GAnBbS,aCeJC,MAbf,WACE,IAAMC,EAAYC,mBAAS,SAC3B,OACE,cAAC,EAAaC,SAAd,CAAuBC,MAAOH,EAA9B,SACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACI,EAAD,UCDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fc20a0bc.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst ThemeContext = React.createContext([\"light\", () => {}]);\n\nexport default ThemeContext;\n","import React,{useContext} from \"react\";\nimport ThemeContext from \"./Context/ThemeContext\";\nimport {FaArrowRight} from 'react-icons/fa'\n\nconst themeTogglerStyle = {\n    cursor: \"pointer\"\n}\nconst ThemeToggler = () => {\n    const[themeMode, setThemeMode] = useContext(ThemeContext);\n    return(\n        <div style = {themeTogglerStyle} onClick = {() => {setThemeMode(themeMode === \"light\"? \"dark\": \"light\")}}>\n            <span title = \"switch theme\">\n            <h2>Theme Mode</h2>Click <FaArrowRight/>   {themeMode === \"light\" ? \"üåô\" : \"‚òÄÔ∏è\" } \n            </span>\n        </div>\n    );\n}\n\nexport default ThemeToggler;\n","import React from \"react\";\nimport ThemeToggler from \"./ThemeToggler\";\n\nconst headerStyles = {\n    padding: \"1rem\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n}\nconst Header = () => {\n    return(\n        <header style = {headerStyles}>\n            <h1>Context API</h1>\n            <ThemeToggler />\n        </header>\n    );\n}\n\nexport default Header;\n","const AppTheme = {\n\tlight: {\n\t\t\ttextColor: \"#000\",\n\t\t\tbackgroundColor: \"#fff\"\n\t},\n\tdark: {\n\t\t\ttextColor: \"#fff\",\n\t\t\tbackgroundColor: \"#333\"\n\t}\n}\n\n\nexport default AppTheme;\n","import React,{ useContext} from 'react';\nimport ThemeContext from './Context/ThemeContext'\nimport AppTheme from './Colors'\n\n\n\nconst Main = () => {\n    const theme = useContext(ThemeContext)[0];\n    const currentTheme = AppTheme[theme];\n    return(\n        <main style = {{\n            padding: \"1rem\",\n            backgroundColor: `${currentTheme.backgroundColor}`,\n            color: `${currentTheme.textColor}`,        \n        }}>\n            <h1>Main With Function</h1>\n            <p>This is a paragraph </p>\n            \n        </main>\n    );\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport ThemeContext from \"./Context/ThemeContext\";\nimport AppTheme from \"./Colors\";\n\nclass Main extends Component {\n    constructor() {\n        super();\n        this.state = {}\n    }\n    render() {\n        return (\n            <ThemeContext.Consumer>\n                {\n                    ([theme]) => {\n                        const currentTheme = AppTheme[theme];\n                        return(\n                            <main style = {{\n                                padding: \"1rem\",\n                                backgroundColor: `${currentTheme.backgroundColor}`,\n                                color: `${currentTheme.textColor}`,\n                            \n                            }}>\n                                <h1>Main With Class</h1>\n                                <p>This is a paragraph with Class</p>\n                                \n                            </main>\n                        )\n                       \n                    }\n                }\n            </ThemeContext.Consumer>\n        );\n    }\n\n}\nexport default Main;\n","import React, { useState } from \"react\";\nimport ThemeContext from \"./Context/ThemeContext\";\nimport Header from \"./Header\";\nimport Main from \"./MainWithFunction\";\nimport MainWithClass from \"./MainWithClass\";\n\nfunction App() {\n  const themeHook = useState(\"light\");\n  return (\n    <ThemeContext.Provider value={themeHook}>\n      <div>\n        <Header />\n        <Main />\n        <MainWithClass />\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}